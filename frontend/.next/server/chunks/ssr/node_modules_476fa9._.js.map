{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/jaskaransingh/projects/LibraryManagerAI/client/node_modules/%40wagmi/connectors/src/exports/index.ts"],"sourcesContent":["// biome-ignore lint/performance/noBarrelFile: entrypoint module\nexport {\n  type InjectedParameters,\n  injected,\n  type MockParameters,\n  mock,\n} from '@wagmi/core'\n\nexport {\n  type CoinbaseWalletParameters,\n  coinbaseWallet,\n} from '../coinbaseWallet.js'\n\nexport { type MetaMaskParameters, metaMask } from '../metaMask.js'\n\nexport { type SafeParameters, safe } from '../safe.js'\n\nexport {\n  type WalletConnectParameters,\n  walletConnect,\n} from '../walletConnect.js'\n\nexport { version } from '../version.js'\n"],"names":[],"mappings":"AAAA,gEAAgE","ignoreList":[0]}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"file":"coinbaseWallet.js","sources":["file:///Users/jaskaransingh/projects/LibraryManagerAI/client/node_modules/%40wagmi/connectors/src/coinbaseWallet.ts"],"sourcesContent":["import type {\n  Preference,\n  ProviderInterface,\n  createCoinbaseWalletSDK,\n} from '@coinbase/wallet-sdk'\nimport {\n  ChainNotConfiguredError,\n  type Connector,\n  createConnector,\n} from '@wagmi/core'\nimport type { Compute, Mutable, Omit } from '@wagmi/core/internal'\nimport type {\n  CoinbaseWalletProvider as CBW_Provider,\n  CoinbaseWalletSDK as CBW_SDK,\n} from 'cbw-sdk'\nimport {\n  type AddEthereumChainParameter,\n  type Address,\n  type Hex,\n  type ProviderRpcError,\n  SwitchChainError,\n  UserRejectedRequestError,\n  getAddress,\n  numberToHex,\n} from 'viem'\n\ntype Version = '3' | '4'\n\nexport type CoinbaseWalletParameters<version extends Version = '3'> =\n  version extends '4'\n    ? Compute<\n        {\n          headlessMode?: false | undefined\n          /** Coinbase Wallet SDK version */\n          version?: version | '3' | undefined\n        } & Version4Parameters\n      >\n    : Compute<\n        {\n          /**\n           * @deprecated `headlessMode` will be removed in the next major version. Upgrade to `version: '4'`.\n           */\n          headlessMode?: true | undefined\n          /**\n           * Coinbase Wallet SDK version\n           * @deprecated Version 3 will be removed in the next major version. Upgrade to `version: '4'`.\n           * @default '4'\n           */\n          version?: version | '4' | undefined\n        } & Version3Parameters\n      >\n\ncoinbaseWallet.type = 'coinbaseWallet' as const\nexport function coinbaseWallet<version extends Version>(\n  parameters: CoinbaseWalletParameters<version> = {} as any,\n): version extends '4'\n  ? ReturnType<typeof version4>\n  : ReturnType<typeof version3> {\n  if (parameters.version === '3' || parameters.headlessMode)\n    return version3(parameters as Version3Parameters) as any\n  return version4(parameters as Version4Parameters) as any\n}\n\ntype Version4Parameters = Mutable<\n  Omit<\n    Parameters<typeof createCoinbaseWalletSDK>[0],\n    | 'appChainIds' // set via wagmi config\n    | 'preference'\n  > & {\n    // TODO(v3): Remove `Preference['options']`\n    /**\n     * Preference for the type of wallet to display.\n     * @default 'all'\n     */\n    preference?: Preference['options'] | Compute<Preference> | undefined\n  }\n>\n\nfunction version4(parameters: Version4Parameters) {\n  type Provider = ProviderInterface & {\n    // for backwards compatibility\n    close?(): void\n  }\n  type Properties = {\n    connect(parameters?: {\n      chainId?: number | undefined\n      instantOnboarding?: boolean | undefined\n      isReconnecting?: boolean | undefined\n    }): Promise<{\n      accounts: readonly Address[]\n      chainId: number\n    }>\n  }\n\n  let walletProvider: Provider | undefined\n\n  let accountsChanged: Connector['onAccountsChanged'] | undefined\n  let chainChanged: Connector['onChainChanged'] | undefined\n  let disconnect: Connector['onDisconnect'] | undefined\n\n  return createConnector<Provider, Properties>((config) => ({\n    id: 'coinbaseWalletSDK',\n    name: 'Coinbase Wallet',\n    rdns: 'com.coinbase.wallet',\n    type: coinbaseWallet.type,\n    async connect({ chainId, ...rest } = {}) {\n      try {\n        const provider = await this.getProvider()\n        const accounts = (\n          (await provider.request({\n            method: 'eth_requestAccounts',\n            params:\n              'instantOnboarding' in rest && rest.instantOnboarding\n                ? [{ onboarding: 'instant' }]\n                : [],\n          })) as string[]\n        ).map((x) => getAddress(x))\n\n        if (!accountsChanged) {\n          accountsChanged = this.onAccountsChanged.bind(this)\n          provider.on('accountsChanged', accountsChanged)\n        }\n        if (!chainChanged) {\n          chainChanged = this.onChainChanged.bind(this)\n          provider.on('chainChanged', chainChanged)\n        }\n        if (!disconnect) {\n          disconnect = this.onDisconnect.bind(this)\n          provider.on('disconnect', disconnect)\n        }\n\n        // Switch to chain if provided\n        let currentChainId = await this.getChainId()\n        if (chainId && currentChainId !== chainId) {\n          const chain = await this.switchChain!({ chainId }).catch((error) => {\n            if (error.code === UserRejectedRequestError.code) throw error\n            return { id: currentChainId }\n          })\n          currentChainId = chain?.id ?? currentChainId\n        }\n\n        return { accounts, chainId: currentChainId }\n      } catch (error) {\n        if (\n          /(user closed modal|accounts received is empty|user denied account|request rejected)/i.test(\n            (error as Error).message,\n          )\n        )\n          throw new UserRejectedRequestError(error as Error)\n        throw error\n      }\n    },\n    async disconnect() {\n      const provider = await this.getProvider()\n\n      if (accountsChanged) {\n        provider.removeListener('accountsChanged', accountsChanged)\n        accountsChanged = undefined\n      }\n      if (chainChanged) {\n        provider.removeListener('chainChanged', chainChanged)\n        chainChanged = undefined\n      }\n      if (disconnect) {\n        provider.removeListener('disconnect', disconnect)\n        disconnect = undefined\n      }\n\n      provider.disconnect()\n      provider.close?.()\n    },\n    async getAccounts() {\n      const provider = await this.getProvider()\n      return (\n        (await provider.request({\n          method: 'eth_accounts',\n        })) as string[]\n      ).map((x) => getAddress(x))\n    },\n    async getChainId() {\n      const provider = await this.getProvider()\n      const chainId = (await provider.request({\n        method: 'eth_chainId',\n      })) as Hex\n      return Number(chainId)\n    },\n    async getProvider() {\n      if (!walletProvider) {\n        const preference = (() => {\n          if (typeof parameters.preference === 'string')\n            return { options: parameters.preference }\n          return {\n            ...parameters.preference,\n            options: parameters.preference?.options ?? 'all',\n          }\n        })()\n\n        const { createCoinbaseWalletSDK } = await import('@coinbase/wallet-sdk')\n        const sdk = createCoinbaseWalletSDK({\n          ...parameters,\n          appChainIds: config.chains.map((x) => x.id),\n          preference,\n        })\n\n        walletProvider = sdk.getProvider()\n      }\n\n      return walletProvider\n    },\n    async isAuthorized() {\n      try {\n        const accounts = await this.getAccounts()\n        return !!accounts.length\n      } catch {\n        return false\n      }\n    },\n    async switchChain({ addEthereumChainParameter, chainId }) {\n      const chain = config.chains.find((chain) => chain.id === chainId)\n      if (!chain) throw new SwitchChainError(new ChainNotConfiguredError())\n\n      const provider = await this.getProvider()\n\n      try {\n        await provider.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{ chainId: numberToHex(chain.id) }],\n        })\n        return chain\n      } catch (error) {\n        // Indicates chain is not added to provider\n        if ((error as ProviderRpcError).code === 4902) {\n          try {\n            let blockExplorerUrls: string[] | undefined\n            if (addEthereumChainParameter?.blockExplorerUrls)\n              blockExplorerUrls = addEthereumChainParameter.blockExplorerUrls\n            else\n              blockExplorerUrls = chain.blockExplorers?.default.url\n                ? [chain.blockExplorers?.default.url]\n                : []\n\n            let rpcUrls: readonly string[]\n            if (addEthereumChainParameter?.rpcUrls?.length)\n              rpcUrls = addEthereumChainParameter.rpcUrls\n            else rpcUrls = [chain.rpcUrls.default?.http[0] ?? '']\n\n            const addEthereumChain = {\n              blockExplorerUrls,\n              chainId: numberToHex(chainId),\n              chainName: addEthereumChainParameter?.chainName ?? chain.name,\n              iconUrls: addEthereumChainParameter?.iconUrls,\n              nativeCurrency:\n                addEthereumChainParameter?.nativeCurrency ??\n                chain.nativeCurrency,\n              rpcUrls,\n            } satisfies AddEthereumChainParameter\n\n            await provider.request({\n              method: 'wallet_addEthereumChain',\n              params: [addEthereumChain],\n            })\n\n            return chain\n          } catch (error) {\n            throw new UserRejectedRequestError(error as Error)\n          }\n        }\n\n        throw new SwitchChainError(error as Error)\n      }\n    },\n    onAccountsChanged(accounts) {\n      if (accounts.length === 0) this.onDisconnect()\n      else\n        config.emitter.emit('change', {\n          accounts: accounts.map((x) => getAddress(x)),\n        })\n    },\n    onChainChanged(chain) {\n      const chainId = Number(chain)\n      config.emitter.emit('change', { chainId })\n    },\n    async onDisconnect(_error) {\n      config.emitter.emit('disconnect')\n\n      const provider = await this.getProvider()\n      if (accountsChanged) {\n        provider.removeListener('accountsChanged', accountsChanged)\n        accountsChanged = undefined\n      }\n      if (chainChanged) {\n        provider.removeListener('chainChanged', chainChanged)\n        chainChanged = undefined\n      }\n      if (disconnect) {\n        provider.removeListener('disconnect', disconnect)\n        disconnect = undefined\n      }\n    },\n  }))\n}\n\ntype Version3Parameters = Mutable<\n  Omit<\n    ConstructorParameters<typeof CBW_SDK>[0],\n    'reloadOnDisconnect' // remove property since TSDoc says default is `true`\n  >\n> & {\n  /**\n   * Fallback Ethereum JSON RPC URL\n   * @default \"\"\n   */\n  jsonRpcUrl?: string | undefined\n  /**\n   * Fallback Ethereum Chain ID\n   * @default 1\n   */\n  chainId?: number | undefined\n  /**\n   * Whether or not to reload dapp automatically after disconnect.\n   * @default false\n   */\n  reloadOnDisconnect?: boolean | undefined\n}\n\nfunction version3(parameters: Version3Parameters) {\n  const reloadOnDisconnect = false\n\n  type Provider = CBW_Provider\n\n  let sdk: CBW_SDK | undefined\n  let walletProvider: Provider | undefined\n\n  let accountsChanged: Connector['onAccountsChanged'] | undefined\n  let chainChanged: Connector['onChainChanged'] | undefined\n  let disconnect: Connector['onDisconnect'] | undefined\n\n  return createConnector<Provider>((config) => ({\n    id: 'coinbaseWalletSDK',\n    name: 'Coinbase Wallet',\n    type: coinbaseWallet.type,\n    async connect({ chainId } = {}) {\n      try {\n        const provider = await this.getProvider()\n        const accounts = (\n          (await provider.request({\n            method: 'eth_requestAccounts',\n          })) as string[]\n        ).map((x) => getAddress(x))\n\n        if (!accountsChanged) {\n          accountsChanged = this.onAccountsChanged.bind(this)\n          provider.on('accountsChanged', accountsChanged)\n        }\n        if (!chainChanged) {\n          chainChanged = this.onChainChanged.bind(this)\n          provider.on('chainChanged', chainChanged)\n        }\n        if (!disconnect) {\n          disconnect = this.onDisconnect.bind(this)\n          provider.on('disconnect', disconnect)\n        }\n\n        // Switch to chain if provided\n        let currentChainId = await this.getChainId()\n        if (chainId && currentChainId !== chainId) {\n          const chain = await this.switchChain!({ chainId }).catch((error) => {\n            if (error.code === UserRejectedRequestError.code) throw error\n            return { id: currentChainId }\n          })\n          currentChainId = chain?.id ?? currentChainId\n        }\n\n        return { accounts, chainId: currentChainId }\n      } catch (error) {\n        if (\n          /(user closed modal|accounts received is empty|user denied account)/i.test(\n            (error as Error).message,\n          )\n        )\n          throw new UserRejectedRequestError(error as Error)\n        throw error\n      }\n    },\n    async disconnect() {\n      const provider = await this.getProvider()\n\n      if (accountsChanged) {\n        provider.removeListener('accountsChanged', accountsChanged)\n        accountsChanged = undefined\n      }\n      if (chainChanged) {\n        provider.removeListener('chainChanged', chainChanged)\n        chainChanged = undefined\n      }\n      if (disconnect) {\n        provider.removeListener('disconnect', disconnect)\n        disconnect = undefined\n      }\n\n      provider.disconnect()\n      provider.close()\n    },\n    async getAccounts() {\n      const provider = await this.getProvider()\n      return (\n        await provider.request<string[]>({\n          method: 'eth_accounts',\n        })\n      ).map((x) => getAddress(x))\n    },\n    async getChainId() {\n      const provider = await this.getProvider()\n      const chainId = await provider.request<Hex>({\n        method: 'eth_chainId',\n      })\n      return Number(chainId)\n    },\n    async getProvider() {\n      if (!walletProvider) {\n        // Unwrapping import for Vite compatibility.\n        // See: https://github.com/vitejs/vite/issues/9703\n        const CoinbaseWalletSDK = await (async () => {\n          const { default: SDK } = await import('cbw-sdk')\n          if (typeof SDK !== 'function' && typeof SDK.default === 'function')\n            return SDK.default\n          return SDK as unknown as typeof SDK.default\n        })()\n\n        sdk = new CoinbaseWalletSDK({ ...parameters, reloadOnDisconnect })\n\n        // Force types to retrieve private `walletExtension` method from the Coinbase Wallet SDK.\n        const walletExtensionChainId = (\n          sdk as unknown as {\n            get walletExtension(): { getChainId(): number } | undefined\n          }\n        ).walletExtension?.getChainId()\n\n        const chain =\n          config.chains.find((chain) =>\n            parameters.chainId\n              ? chain.id === parameters.chainId\n              : chain.id === walletExtensionChainId,\n          ) || config.chains[0]\n        const chainId = parameters.chainId || chain?.id\n        const jsonRpcUrl =\n          parameters.jsonRpcUrl || chain?.rpcUrls.default.http[0]\n\n        walletProvider = sdk.makeWeb3Provider(jsonRpcUrl, chainId)\n      }\n\n      return walletProvider\n    },\n    async isAuthorized() {\n      try {\n        const accounts = await this.getAccounts()\n        return !!accounts.length\n      } catch {\n        return false\n      }\n    },\n    async switchChain({ addEthereumChainParameter, chainId }) {\n      const chain = config.chains.find((chain) => chain.id === chainId)\n      if (!chain) throw new SwitchChainError(new ChainNotConfiguredError())\n\n      const provider = await this.getProvider()\n\n      try {\n        await provider.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{ chainId: numberToHex(chain.id) }],\n        })\n        return chain\n      } catch (error) {\n        // Indicates chain is not added to provider\n        if ((error as ProviderRpcError).code === 4902) {\n          try {\n            let blockExplorerUrls: string[] | undefined\n            if (addEthereumChainParameter?.blockExplorerUrls)\n              blockExplorerUrls = addEthereumChainParameter.blockExplorerUrls\n            else\n              blockExplorerUrls = chain.blockExplorers?.default.url\n                ? [chain.blockExplorers?.default.url]\n                : []\n\n            let rpcUrls: readonly string[]\n            if (addEthereumChainParameter?.rpcUrls?.length)\n              rpcUrls = addEthereumChainParameter.rpcUrls\n            else rpcUrls = [chain.rpcUrls.default?.http[0] ?? '']\n\n            const addEthereumChain = {\n              blockExplorerUrls,\n              chainId: numberToHex(chainId),\n              chainName: addEthereumChainParameter?.chainName ?? chain.name,\n              iconUrls: addEthereumChainParameter?.iconUrls,\n              nativeCurrency:\n                addEthereumChainParameter?.nativeCurrency ??\n                chain.nativeCurrency,\n              rpcUrls,\n            } satisfies AddEthereumChainParameter\n\n            await provider.request({\n              method: 'wallet_addEthereumChain',\n              params: [addEthereumChain],\n            })\n\n            return chain\n          } catch (error) {\n            throw new UserRejectedRequestError(error as Error)\n          }\n        }\n\n        throw new SwitchChainError(error as Error)\n      }\n    },\n    onAccountsChanged(accounts) {\n      if (accounts.length === 0) this.onDisconnect()\n      else\n        config.emitter.emit('change', {\n          accounts: accounts.map((x) => getAddress(x)),\n        })\n    },\n    onChainChanged(chain) {\n      const chainId = Number(chain)\n      config.emitter.emit('change', { chainId })\n    },\n    async onDisconnect(_error) {\n      config.emitter.emit('disconnect')\n\n      const provider = await this.getProvider()\n      if (accountsChanged) {\n        provider.removeListener('accountsChanged', accountsChanged)\n        accountsChanged = undefined\n      }\n      if (chainChanged) {\n        provider.removeListener('chainChanged', chainChanged)\n        chainChanged = undefined\n      }\n      if (disconnect) {\n        provider.removeListener('disconnect', disconnect)\n        disconnect = undefined\n      }\n    },\n  }))\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 430, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"file":"extractRpcUrls.js","sources":["file:///Users/jaskaransingh/projects/LibraryManagerAI/client/node_modules/%40wagmi/core/src/utils/extractRpcUrls.ts"],"sourcesContent":["import type { Chain, Transport } from 'viem'\n\ntype ExtractRpcUrlsParameters = {\n  transports?: Record<string, Transport> | undefined\n  chain: Chain\n}\n\nexport function extractRpcUrls(parameters: ExtractRpcUrlsParameters) {\n  const { chain } = parameters\n  const fallbackUrl = chain.rpcUrls.default.http[0]\n\n  if (!parameters.transports) return [fallbackUrl]\n\n  const transport = parameters.transports?.[chain.id]?.({ chain })\n  const transports = (transport?.value?.transports as NonNullable<\n    typeof transport\n  >[]) || [transport]\n  return transports.map(({ value }) => value?.url || fallbackUrl)\n}\n"],"names":[],"mappings":";;;AAOM,SAAU,cAAc,CAAC,UAAoC;IACjE,MAAM,EAAE,KAAK,EAAE,GAAG,UAAU,CAAA;IAC5B,MAAM,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IAEjD,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,OAAO;QAAC,WAAW;KAAC,CAAA;IAEhD,MAAM,SAAS,GAAG,UAAU,CAAC,UAAU,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC;QAAE,KAAK;IAAA,CAAE,CAAC,CAAA;IAChE,MAAM,UAAU,GAAI,SAAS,EAAE,KAAK,EAAE,UAElC,IAAI;QAAC,SAAS;KAAC,CAAA;IACnB,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAG,CAAD,IAAM,EAAE,GAAG,IAAI,WAAW,CAAC,CAAA;AACjE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 453, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 459, "column": 0}, "map": {"version":3,"file":"metaMask.js","sources":["file:///Users/jaskaransingh/projects/LibraryManagerAI/client/node_modules/%40wagmi/connectors/src/metaMask.ts"],"sourcesContent":["import type {\n  MetaMaskSDK,\n  MetaMaskSDKOptions,\n  RPC_URLS_MAP,\n  SDKProvider,\n} from '@metamask/sdk'\nimport {\n  ChainNotConfiguredError,\n  type Connector,\n  ProviderNotFoundError,\n  createConnector,\n  extractRpcUrls,\n} from '@wagmi/core'\nimport type {\n  Compute,\n  ExactPartial,\n  OneOf,\n  RemoveUndefined,\n  UnionCompute,\n} from '@wagmi/core/internal'\nimport {\n  type AddEthereumChainParameter,\n  type Address,\n  type Hex,\n  type ProviderConnectInfo,\n  type ProviderRpcError,\n  ResourceUnavailableRpcError,\n  type RpcError,\n  SwitchChainError,\n  UserRejectedRequestError,\n  getAddress,\n  hexToNumber,\n  numberToHex,\n  withRetry,\n  withTimeout,\n} from 'viem'\n\nexport type MetaMaskParameters = UnionCompute<\n  WagmiMetaMaskSDKOptions &\n    OneOf<\n      | {\n          /* Shortcut to connect and sign a message */\n          connectAndSign?: string | undefined\n        }\n      | {\n          // TODO: Strongly type `method` and `params`\n          /* Allow `connectWith` any rpc method */\n          connectWith?: { method: string; params: unknown[] } | undefined\n        }\n    >\n>\n\ntype WagmiMetaMaskSDKOptions = Compute<\n  ExactPartial<\n    Omit<\n      MetaMaskSDKOptions,\n      | '_source'\n      | 'forceDeleteProvider'\n      | 'forceInjectProvider'\n      | 'injectProvider'\n      | 'useDeeplink'\n      | 'readonlyRPCMap'\n    >\n  > & {\n    /** @deprecated */\n    forceDeleteProvider?: MetaMaskSDKOptions['forceDeleteProvider']\n    /** @deprecated */\n    forceInjectProvider?: MetaMaskSDKOptions['forceInjectProvider']\n    /** @deprecated */\n    injectProvider?: MetaMaskSDKOptions['injectProvider']\n    /** @deprecated */\n    useDeeplink?: MetaMaskSDKOptions['useDeeplink']\n  }\n>\n\nmetaMask.type = 'metaMask' as const\nexport function metaMask(parameters: MetaMaskParameters = {}) {\n  type Provider = SDKProvider\n  type Properties = {\n    onConnect(connectInfo: ProviderConnectInfo): void\n    onDisplayUri(uri: string): void\n  }\n  type Listener = Parameters<Provider['on']>[1]\n\n  let sdk: MetaMaskSDK\n  let provider: Provider | undefined\n  let providerPromise: Promise<typeof provider>\n\n  let accountsChanged: Connector['onAccountsChanged'] | undefined\n  let chainChanged: Connector['onChainChanged'] | undefined\n  let connect: Connector['onConnect'] | undefined\n  let displayUri: ((uri: string) => void) | undefined\n  let disconnect: Connector['onDisconnect'] | undefined\n\n  return createConnector<Provider, Properties>((config) => ({\n    id: 'metaMaskSDK',\n    name: 'MetaMask',\n    rdns: ['io.metamask', 'io.metamask.mobile'],\n    type: metaMask.type,\n    async setup() {\n      const provider = await this.getProvider()\n      if (provider?.on) {\n        if (!connect) {\n          connect = this.onConnect.bind(this)\n          provider.on('connect', connect as Listener)\n        }\n\n        // We shouldn't need to listen for `'accountsChanged'` here since the `'connect'` event should suffice (and wallet shouldn't be connected yet).\n        // Some wallets, like MetaMask, do not implement the `'connect'` event and overload `'accountsChanged'` instead.\n        if (!accountsChanged) {\n          accountsChanged = this.onAccountsChanged.bind(this)\n          provider.on('accountsChanged', accountsChanged as Listener)\n        }\n      }\n    },\n    async connect({ chainId, isReconnecting } = {}) {\n      const provider = await this.getProvider()\n      if (!displayUri) {\n        displayUri = this.onDisplayUri\n        provider.on('display_uri', displayUri as Listener)\n      }\n\n      let accounts: readonly Address[] = []\n      if (isReconnecting) accounts = await this.getAccounts().catch(() => [])\n\n      try {\n        let signResponse: string | undefined\n        let connectWithResponse: unknown | undefined\n        if (!accounts?.length) {\n          if (parameters.connectAndSign || parameters.connectWith) {\n            if (parameters.connectAndSign)\n              signResponse = await sdk.connectAndSign({\n                msg: parameters.connectAndSign,\n              })\n            else if (parameters.connectWith)\n              connectWithResponse = await sdk.connectWith({\n                method: parameters.connectWith.method,\n                params: parameters.connectWith.params,\n              })\n\n            accounts = await this.getAccounts()\n          } else {\n            const requestedAccounts = (await sdk.connect()) as string[]\n            accounts = requestedAccounts.map((x) => getAddress(x))\n          }\n        }\n        // Switch to chain if provided\n        let currentChainId = (await this.getChainId()) as number\n        if (chainId && currentChainId !== chainId) {\n          const chain = await this.switchChain!({ chainId }).catch((error) => {\n            if (error.code === UserRejectedRequestError.code) throw error\n            return { id: currentChainId }\n          })\n          currentChainId = chain?.id ?? currentChainId\n        }\n\n        if (displayUri) {\n          provider.removeListener('display_uri', displayUri)\n          displayUri = undefined\n        }\n\n        if (signResponse)\n          provider.emit('connectAndSign', {\n            accounts,\n            chainId: currentChainId,\n            signResponse,\n          })\n        else if (connectWithResponse)\n          provider.emit('connectWith', {\n            accounts,\n            chainId: currentChainId,\n            connectWithResponse,\n          })\n\n        // Manage EIP-1193 event listeners\n        // https://eips.ethereum.org/EIPS/eip-1193#events\n        if (connect) {\n          provider.removeListener('connect', connect)\n          connect = undefined\n        }\n        if (!accountsChanged) {\n          accountsChanged = this.onAccountsChanged.bind(this)\n          provider.on('accountsChanged', accountsChanged as Listener)\n        }\n        if (!chainChanged) {\n          chainChanged = this.onChainChanged.bind(this)\n          provider.on('chainChanged', chainChanged as Listener)\n        }\n        if (!disconnect) {\n          disconnect = this.onDisconnect.bind(this)\n          provider.on('disconnect', disconnect as Listener)\n        }\n\n        return { accounts, chainId: currentChainId }\n      } catch (err) {\n        const error = err as RpcError\n        if (error.code === UserRejectedRequestError.code)\n          throw new UserRejectedRequestError(error)\n        if (error.code === ResourceUnavailableRpcError.code)\n          throw new ResourceUnavailableRpcError(error)\n        throw error\n      }\n    },\n    async disconnect() {\n      const provider = await this.getProvider()\n\n      // Manage EIP-1193 event listeners\n      if (chainChanged) {\n        provider.removeListener('chainChanged', chainChanged)\n        chainChanged = undefined\n      }\n      if (disconnect) {\n        provider.removeListener('disconnect', disconnect)\n        disconnect = undefined\n      }\n      if (!connect) {\n        connect = this.onConnect.bind(this)\n        provider.on('connect', connect as Listener)\n      }\n\n      await sdk.terminate()\n    },\n    async getAccounts() {\n      const provider = await this.getProvider()\n      const accounts = (await provider.request({\n        method: 'eth_accounts',\n      })) as string[]\n      return accounts.map((x) => getAddress(x))\n    },\n    async getChainId() {\n      const provider = await this.getProvider()\n      const chainId =\n        provider.getChainId() ||\n        (await provider?.request({ method: 'eth_chainId' }))\n      return Number(chainId)\n    },\n    async getProvider() {\n      async function initProvider() {\n        // Unwrapping import for Vite compatibility.\n        // See: https://github.com/vitejs/vite/issues/9703\n        const MetaMaskSDK = await (async () => {\n          const { default: SDK } = await import('@metamask/sdk')\n          if (typeof SDK !== 'function' && typeof SDK.default === 'function')\n            return SDK.default\n          return SDK as unknown as typeof SDK.default\n        })()\n\n        const readonlyRPCMap: RPC_URLS_MAP = {}\n        for (const chain of config.chains)\n          readonlyRPCMap[numberToHex(chain.id)] = extractRpcUrls({\n            chain,\n            transports: config.transports,\n          })?.[0]\n\n        sdk = new MetaMaskSDK({\n          _source: 'wagmi',\n          forceDeleteProvider: false,\n          forceInjectProvider: false,\n          injectProvider: false,\n          // Workaround cast since MetaMask SDK does not support `'exactOptionalPropertyTypes'`\n          ...(parameters as RemoveUndefined<typeof parameters>),\n          readonlyRPCMap,\n          dappMetadata: {\n            ...parameters.dappMetadata,\n            // Test if name and url are set AND not empty\n            name: parameters.dappMetadata?.name\n              ? parameters.dappMetadata?.name\n              : 'wagmi',\n            url: parameters.dappMetadata?.url\n              ? parameters.dappMetadata?.url\n              : typeof window !== 'undefined'\n                ? window.location.origin\n                : 'https://wagmi.sh',\n          },\n          useDeeplink: parameters.useDeeplink ?? true,\n        })\n        const result = await sdk.init()\n        // On initial load, sometimes `sdk.getProvider` does not return provider.\n        // https://github.com/wevm/wagmi/issues/4367\n        // Use result of `init` call if available.\n        const provider = (() => {\n          if (result?.activeProvider) return result.activeProvider\n          return sdk.getProvider()\n        })()\n        if (!provider) throw new ProviderNotFoundError()\n        return provider\n      }\n\n      if (!provider) {\n        if (!providerPromise) providerPromise = initProvider()\n        provider = await providerPromise\n      }\n      return provider!\n    },\n    async isAuthorized() {\n      try {\n        // MetaMask mobile provider sometimes fails to immediately resolve\n        // JSON-RPC requests on page load\n        const timeout = 200\n        const accounts = await withRetry(\n          () => withTimeout(() => this.getAccounts(), { timeout }),\n          {\n            delay: timeout + 1,\n            retryCount: 3,\n          },\n        )\n        return !!accounts.length\n      } catch {\n        return false\n      }\n    },\n    async switchChain({ addEthereumChainParameter, chainId }) {\n      const provider = await this.getProvider()\n\n      const chain = config.chains.find((x) => x.id === chainId)\n      if (!chain) throw new SwitchChainError(new ChainNotConfiguredError())\n\n      try {\n        await provider.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{ chainId: numberToHex(chainId) }],\n        })\n\n        // During `'wallet_switchEthereumChain'`, MetaMask makes a `'net_version'` RPC call to the target chain.\n        // If this request fails, MetaMask does not emit the `'chainChanged'` event, but will still switch the chain.\n        // To counter this behavior, we request and emit the current chain ID to confirm the chain switch either via\n        // this callback or an externally emitted `'chainChanged'` event.\n        // https://github.com/MetaMask/metamask-extension/issues/24247\n        await waitForChainIdToSync()\n        await sendAndWaitForChangeEvent(chainId)\n\n        return chain\n      } catch (err) {\n        const error = err as RpcError\n\n        if (error.code === UserRejectedRequestError.code)\n          throw new UserRejectedRequestError(error)\n\n        // Indicates chain is not added to provider\n        if (\n          error.code === 4902 ||\n          // Unwrapping for MetaMask Mobile\n          // https://github.com/MetaMask/metamask-mobile/issues/2944#issuecomment-976988719\n          (error as ProviderRpcError<{ originalError?: { code: number } }>)\n            ?.data?.originalError?.code === 4902\n        ) {\n          try {\n            await provider.request({\n              method: 'wallet_addEthereumChain',\n              params: [\n                {\n                  blockExplorerUrls: (() => {\n                    const { default: blockExplorer, ...blockExplorers } =\n                      chain.blockExplorers ?? {}\n                    if (addEthereumChainParameter?.blockExplorerUrls)\n                      return addEthereumChainParameter.blockExplorerUrls\n                    if (blockExplorer)\n                      return [\n                        blockExplorer.url,\n                        ...Object.values(blockExplorers).map((x) => x.url),\n                      ]\n                    return\n                  })(),\n                  chainId: numberToHex(chainId),\n                  chainName: addEthereumChainParameter?.chainName ?? chain.name,\n                  iconUrls: addEthereumChainParameter?.iconUrls,\n                  nativeCurrency:\n                    addEthereumChainParameter?.nativeCurrency ??\n                    chain.nativeCurrency,\n                  rpcUrls: (() => {\n                    if (addEthereumChainParameter?.rpcUrls?.length)\n                      return addEthereumChainParameter.rpcUrls\n                    return [chain.rpcUrls.default?.http[0] ?? '']\n                  })(),\n                } satisfies AddEthereumChainParameter,\n              ],\n            })\n\n            await waitForChainIdToSync()\n            await sendAndWaitForChangeEvent(chainId)\n\n            return chain\n          } catch (err) {\n            const error = err as RpcError\n            if (error.code === UserRejectedRequestError.code)\n              throw new UserRejectedRequestError(error)\n            throw new SwitchChainError(error)\n          }\n        }\n\n        throw new SwitchChainError(error)\n      }\n\n      async function waitForChainIdToSync() {\n        // On mobile, there is a race condition between the result of `'wallet_addEthereumChain'` and `'eth_chainId'`.\n        // To avoid this, we wait for `'eth_chainId'` to return the expected chain ID with a retry loop.\n        await withRetry(\n          async () => {\n            const value = hexToNumber(\n              // `'eth_chainId'` is cached by the MetaMask SDK side to avoid unnecessary deeplinks\n              (await provider.request({ method: 'eth_chainId' })) as Hex,\n            )\n            // `value` doesn't match expected `chainId`, throw to trigger retry\n            if (value !== chainId)\n              throw new Error('User rejected switch after adding network.')\n            return value\n          },\n          {\n            delay: 50,\n            retryCount: 20, // android device encryption is slower\n          },\n        )\n      }\n\n      async function sendAndWaitForChangeEvent(chainId: number) {\n        await new Promise<void>((resolve) => {\n          const listener = ((data) => {\n            if ('chainId' in data && data.chainId === chainId) {\n              config.emitter.off('change', listener)\n              resolve()\n            }\n          }) satisfies Parameters<typeof config.emitter.on>[1]\n          config.emitter.on('change', listener)\n          config.emitter.emit('change', { chainId })\n        })\n      }\n    },\n    async onAccountsChanged(accounts) {\n      // Disconnect if there are no accounts\n      if (accounts.length === 0) {\n        // ... and using browser extension\n        if (sdk.isExtensionActive()) this.onDisconnect()\n        // FIXME(upstream): Mobile app sometimes emits invalid `accountsChanged` event with empty accounts array\n        else return\n      }\n      // Connect if emitter is listening for connect event (e.g. is disconnected and connects through wallet interface)\n      else if (config.emitter.listenerCount('connect')) {\n        const chainId = (await this.getChainId()).toString()\n        this.onConnect({ chainId })\n      }\n      // Regular change event\n      else\n        config.emitter.emit('change', {\n          accounts: accounts.map((x) => getAddress(x)),\n        })\n    },\n    onChainChanged(chain) {\n      const chainId = Number(chain)\n      config.emitter.emit('change', { chainId })\n    },\n    async onConnect(connectInfo) {\n      const accounts = await this.getAccounts()\n      if (accounts.length === 0) return\n\n      const chainId = Number(connectInfo.chainId)\n      config.emitter.emit('connect', { accounts, chainId })\n\n      const provider = await this.getProvider()\n      if (connect) {\n        provider.removeListener('connect', connect)\n        connect = undefined\n      }\n      if (!accountsChanged) {\n        accountsChanged = this.onAccountsChanged.bind(this)\n        provider.on('accountsChanged', accountsChanged as Listener)\n      }\n      if (!chainChanged) {\n        chainChanged = this.onChainChanged.bind(this)\n        provider.on('chainChanged', chainChanged as Listener)\n      }\n      if (!disconnect) {\n        disconnect = this.onDisconnect.bind(this)\n        provider.on('disconnect', disconnect as Listener)\n      }\n    },\n    async onDisconnect(error) {\n      const provider = await this.getProvider()\n\n      // If MetaMask emits a `code: 1013` error, wait for reconnection before disconnecting\n      // https://github.com/MetaMask/providers/pull/120\n      if (error && (error as RpcError<1013>).code === 1013) {\n        if (provider && !!(await this.getAccounts()).length) return\n      }\n\n      config.emitter.emit('disconnect')\n\n      // Manage EIP-1193 event listeners\n      if (chainChanged) {\n        provider.removeListener('chainChanged', chainChanged)\n        chainChanged = undefined\n      }\n      if (disconnect) {\n        provider.removeListener('disconnect', disconnect)\n        disconnect = undefined\n      }\n      if (!connect) {\n        connect = this.onConnect.bind(this)\n        provider.on('connect', connect as Listener)\n      }\n    },\n    onDisplayUri(uri) {\n      config.emitter.emit('message', { type: 'display_uri', data: uri })\n    },\n  }))\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 856, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 862, "column": 0}, "map": {"version":3,"file":"socket.js","sources":["file:///Users/jaskaransingh/projects/LibraryManagerAI/client/node_modules/viem/utils/rpc/socket.ts"],"sourcesContent":["import { SocketClosedError, TimeoutError } from '../../errors/request.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { RpcRequest, RpcResponse } from '../../types/rpc.js'\nimport {\n  type CreateBatchSchedulerErrorType,\n  createBatchScheduler,\n} from '../promise/createBatchScheduler.js'\nimport { withTimeout } from '../promise/withTimeout.js'\nimport { idCache } from './id.js'\n\ntype Id = string | number\ntype CallbackFn = {\n  onResponse: (message: any) => void\n  onError?: ((error?: Error | Event | undefined) => void) | undefined\n}\ntype CallbackMap = Map<Id, CallbackFn>\n\nexport type GetSocketParameters = {\n  onClose: () => void\n  onError: (error?: Error | Event | undefined) => void\n  onOpen: () => void\n  onResponse: (data: RpcResponse) => void\n}\n\nexport type Socket<socket extends {}> = socket & {\n  close(): void\n  ping?: (() => void) | undefined\n  request(params: { body: RpcRequest }): void\n}\n\nexport type SocketRpcClient<socket extends {}> = {\n  close(): void\n  socket: Socket<socket>\n  request(params: {\n    body: RpcRequest\n    onError?: ((error?: Error | Event | undefined) => void) | undefined\n    onResponse: (message: RpcResponse) => void\n  }): void\n  requestAsync(params: {\n    body: RpcRequest\n    timeout?: number | undefined\n  }): Promise<RpcResponse>\n  requests: CallbackMap\n  subscriptions: CallbackMap\n  url: string\n}\n\nexport type GetSocketRpcClientParameters<socket extends {} = {}> = {\n  getSocket(params: GetSocketParameters): Promise<Socket<socket>>\n  /**\n   * Whether or not to send keep-alive messages.\n   * @default true\n   */\n  keepAlive?:\n    | boolean\n    | {\n        /**\n         * The interval (in ms) to send keep-alive messages.\n         * @default 30_000\n         */\n        interval?: number | undefined\n      }\n    | undefined\n  key?: string\n  /**\n   * Whether or not to attempt to reconnect on socket failure or closure.\n   * @default true\n   */\n  reconnect?:\n    | boolean\n    | {\n        /**\n         * The maximum number of reconnection attempts.\n         * @default 5\n         */\n        attempts?: number | undefined\n        /**\n         * The delay (in ms) between reconnection attempts.\n         * @default 2_000\n         */\n        delay?: number | undefined\n      }\n    | undefined\n  url: string\n}\n\nexport type GetSocketRpcClientErrorType =\n  | CreateBatchSchedulerErrorType\n  | ErrorType\n\nexport const socketClientCache = /*#__PURE__*/ new Map<\n  string,\n  SocketRpcClient<Socket<{}>>\n>()\n\nexport async function getSocketRpcClient<socket extends {}>(\n  parameters: GetSocketRpcClientParameters<socket>,\n): Promise<SocketRpcClient<socket>> {\n  const {\n    getSocket,\n    keepAlive = true,\n    key = 'socket',\n    reconnect = true,\n    url,\n  } = parameters\n  const { interval: keepAliveInterval = 30_000 } =\n    typeof keepAlive === 'object' ? keepAlive : {}\n  const { attempts = 5, delay = 2_000 } =\n    typeof reconnect === 'object' ? reconnect : {}\n\n  let socketClient = socketClientCache.get(`${key}:${url}`)\n\n  // If the socket already exists, return it.\n  if (socketClient) return socketClient as {} as SocketRpcClient<socket>\n\n  let reconnectCount = 0\n  const { schedule } = createBatchScheduler<\n    undefined,\n    [SocketRpcClient<socket>]\n  >({\n    id: `${key}:${url}`,\n    fn: async () => {\n      // Set up a cache for incoming \"synchronous\" requests.\n      const requests = new Map<Id, CallbackFn>()\n\n      // Set up a cache for subscriptions (eth_subscribe).\n      const subscriptions = new Map<Id, CallbackFn>()\n\n      let error: Error | Event | undefined\n      let socket: Socket<{}>\n      let keepAliveTimer: ReturnType<typeof setInterval> | undefined\n\n      // Set up socket implementation.\n      async function setup() {\n        const result = await getSocket({\n          onClose() {\n            // Notify all requests and subscriptions of the closure error.\n            for (const request of requests.values())\n              request.onError?.(new SocketClosedError({ url }))\n            for (const subscription of subscriptions.values())\n              subscription.onError?.(new SocketClosedError({ url }))\n\n            // Clear all requests and subscriptions.\n            requests.clear()\n            subscriptions.clear()\n\n            // Attempt to reconnect.\n            if (reconnect && reconnectCount < attempts)\n              setTimeout(async () => {\n                reconnectCount++\n                await setup().catch(console.error)\n              }, delay)\n          },\n          onError(error_) {\n            error = error_\n\n            // Notify all requests and subscriptions of the error.\n            for (const request of requests.values()) request.onError?.(error)\n            for (const subscription of subscriptions.values())\n              subscription.onError?.(error)\n\n            // Clear all requests and subscriptions.\n            requests.clear()\n            subscriptions.clear()\n\n            // Make sure socket is definitely closed.\n            socketClient?.close()\n\n            // Attempt to reconnect.\n            if (reconnect && reconnectCount < attempts)\n              setTimeout(async () => {\n                reconnectCount++\n                await setup().catch(console.error)\n              }, delay)\n          },\n          onOpen() {\n            error = undefined\n            reconnectCount = 0\n          },\n          onResponse(data) {\n            const isSubscription = data.method === 'eth_subscription'\n            const id = isSubscription ? data.params.subscription : data.id\n            const cache = isSubscription ? subscriptions : requests\n            const callback = cache.get(id)\n            if (callback) callback.onResponse(data)\n            if (!isSubscription) cache.delete(id)\n          },\n        })\n\n        socket = result\n\n        if (keepAlive) {\n          if (keepAliveTimer) clearInterval(keepAliveTimer)\n          keepAliveTimer = setInterval(() => socket.ping?.(), keepAliveInterval)\n        }\n\n        return result\n      }\n      await setup()\n      error = undefined\n\n      // Create a new socket instance.\n      socketClient = {\n        close() {\n          keepAliveTimer && clearInterval(keepAliveTimer)\n          socket.close()\n          socketClientCache.delete(`${key}:${url}`)\n        },\n        get socket() {\n          return socket\n        },\n        request({ body, onError, onResponse }) {\n          if (error && onError) onError(error)\n\n          const id = body.id ?? idCache.take()\n\n          const callback = (response: RpcResponse) => {\n            if (typeof response.id === 'number' && id !== response.id) return\n\n            // If we are subscribing to a topic, we want to set up a listener for incoming\n            // messages.\n            if (\n              body.method === 'eth_subscribe' &&\n              typeof response.result === 'string'\n            )\n              subscriptions.set(response.result, {\n                onResponse: callback,\n                onError,\n              })\n\n            // If we are unsubscribing from a topic, we want to remove the listener.\n            if (body.method === 'eth_unsubscribe')\n              subscriptions.delete(body.params?.[0])\n\n            onResponse(response)\n          }\n\n          requests.set(id, { onResponse: callback, onError })\n          try {\n            socket.request({\n              body: {\n                jsonrpc: '2.0',\n                id,\n                ...body,\n              },\n            })\n          } catch (error) {\n            onError?.(error as Error)\n          }\n        },\n        requestAsync({ body, timeout = 10_000 }) {\n          return withTimeout(\n            () =>\n              new Promise<RpcResponse>((onResponse, onError) =>\n                this.request({\n                  body,\n                  onError,\n                  onResponse,\n                }),\n              ),\n            {\n              errorInstance: new TimeoutError({ body, url }),\n              timeout,\n            },\n          )\n        },\n        requests,\n        subscriptions,\n        url,\n      }\n      socketClientCache.set(`${key}:${url}`, socketClient)\n\n      return [socketClient as {} as SocketRpcClient<socket>]\n    },\n  })\n\n  const [_, [socketClient_]] = await schedule()\n  return socketClient_\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1018, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1024, "column": 0}, "map": {"version":3,"file":"webSocket.js","sources":["file:///Users/jaskaransingh/projects/LibraryManagerAI/client/node_modules/viem/utils/rpc/webSocket.ts"],"sourcesContent":["import type { MessageEvent } from 'isows'\n\nimport {\n  SocketClosedError,\n  WebSocketRequestError,\n} from '../../errors/request.js'\nimport type { RpcRequest } from '../../types/rpc.js'\nimport {\n  type GetSocketRpcClientParameters,\n  type Socket,\n  type SocketRpcClient,\n  getSocketRpcClient,\n} from './socket.js'\n\nexport type GetWebSocketRpcClientOptions = Pick<\n  GetSocketRpcClientParameters,\n  'keepAlive' | 'reconnect'\n>\n\nexport async function getWebSocketRpcClient(\n  url: string,\n  options: GetWebSocketRpcClientOptions | undefined = {},\n): Promise<SocketRpcClient<WebSocket>> {\n  const { keepAlive, reconnect } = options\n\n  return getSocketRpcClient({\n    async getSocket({ onClose, onError, onOpen, onResponse }) {\n      const WebSocket = await import('isows').then((module) => module.WebSocket)\n      const socket = new WebSocket(url)\n\n      function onClose_() {\n        socket.removeEventListener('close', onClose_)\n        socket.removeEventListener('message', onMessage)\n        socket.removeEventListener('error', onError)\n        socket.removeEventListener('open', onOpen)\n        onClose()\n      }\n      function onMessage({ data }: MessageEvent) {\n        try {\n          const _data = JSON.parse(data)\n          onResponse(_data)\n        } catch (error) {\n          onError(error as Error)\n        }\n      }\n\n      // Setup event listeners for RPC & subscription responses.\n      socket.addEventListener('close', onClose_)\n      socket.addEventListener('message', onMessage)\n      socket.addEventListener('error', onError)\n      socket.addEventListener('open', onOpen)\n\n      // Wait for the socket to open.\n      if (socket.readyState === WebSocket.CONNECTING) {\n        await new Promise((resolve, reject) => {\n          if (!socket) return\n          socket.onopen = resolve\n          socket.onerror = reject\n        })\n      }\n\n      const { close: close_ } = socket\n\n      return Object.assign(socket, {\n        close() {\n          close_.bind(socket)()\n          onClose_()\n        },\n        ping() {\n          try {\n            if (\n              socket.readyState === socket.CLOSED ||\n              socket.readyState === socket.CLOSING\n            )\n              throw new WebSocketRequestError({\n                url: socket.url,\n                cause: new SocketClosedError({ url: socket.url }),\n              })\n\n            const body: RpcRequest = {\n              jsonrpc: '2.0',\n              method: 'net_version',\n              params: [],\n            }\n            socket.send(JSON.stringify(body))\n          } catch (error) {\n            onError(error as Error)\n          }\n        },\n        request({ body }) {\n          if (\n            socket.readyState === socket.CLOSED ||\n            socket.readyState === socket.CLOSING\n          )\n            throw new WebSocketRequestError({\n              body,\n              url: socket.url,\n              cause: new SocketClosedError({ url: socket.url }),\n            })\n\n          return socket.send(JSON.stringify(body))\n        },\n      } as Socket<WebSocket>)\n    },\n    keepAlive,\n    reconnect,\n    url,\n  })\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1106, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1112, "column": 0}, "map": {"version":3,"file":"compat.js","sources":["file:///Users/jaskaransingh/projects/LibraryManagerAI/client/node_modules/viem/utils/rpc/compat.ts"],"sourcesContent":["// TODO(v3): This file is here for backwards compatibility, and to prevent breaking changes.\n// These APIs will be removed in v3.\n\n/* c8 ignore start */\nimport type {\n  TimeoutErrorType,\n  WebSocketRequestError,\n} from '../../errors/request.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { RpcResponse } from '../../types/rpc.js'\nimport type { WithTimeoutErrorType } from '../promise/withTimeout.js'\nimport { type HttpRequestParameters, getHttpRpcClient } from './http.js'\nimport type { SocketRpcClient } from './socket.js'\nimport { getWebSocketRpcClient } from './webSocket.js'\n\nexport type WebSocketOptions = Parameters<\n  SocketRpcClient<WebSocket>['request']\n>[0]\nexport type WebSocketReturnType = SocketRpcClient<WebSocket>\nexport type WebSocketErrorType = WebSocketRequestError | ErrorType\n\nfunction webSocket(\n  socketClient: SocketRpcClient<WebSocket>,\n  { body, onError, onResponse }: WebSocketOptions,\n): WebSocketReturnType {\n  socketClient.request({\n    body,\n    onError,\n    onResponse,\n  })\n  return socketClient\n}\n\nexport type WebSocketAsyncOptions = Parameters<\n  SocketRpcClient<WebSocket>['requestAsync']\n>[0]\nexport type WebSocketAsyncReturnType = RpcResponse\nexport type WebSocketAsyncErrorType =\n  | WebSocketErrorType\n  | TimeoutErrorType\n  | WithTimeoutErrorType\n  | ErrorType\n\nasync function webSocketAsync(\n  socketClient: SocketRpcClient<WebSocket>,\n  { body, timeout = 10_000 }: WebSocketAsyncOptions,\n): Promise<WebSocketAsyncReturnType> {\n  return socketClient.requestAsync({\n    body,\n    timeout,\n  })\n}\n\n/**\n * @deprecated use `getSocketClient` instead.\n *\n * ```diff\n * -import { getSocket } from 'viem/utils'\n * +import { getSocketClient } from 'viem/utils'\n *\n * -const socket = await getSocket(url)\n * +const socketClient = await getSocketClient(url)\n * +const socket = socketClient.socket\n * ```\n */\nexport async function getSocket(url: string) {\n  const client = await getWebSocketRpcClient(url)\n  return Object.assign(client.socket, {\n    requests: client.requests,\n    subscriptions: client.subscriptions,\n  })\n}\n\nexport const rpc = {\n  /**\n   * @deprecated use `getHttpRpcClient` instead.\n   *\n   * ```diff\n   * -import { rpc } from 'viem/utils'\n   * +import { getHttpRpcClient } from 'viem/utils'\n   *\n   * -rpc.http(url, params)\n   * +const httpClient = getHttpRpcClient(url)\n   * +httpClient.request(params)\n   * ```\n   */\n  http(url: string, params: HttpRequestParameters) {\n    return getHttpRpcClient(url).request(params)\n  },\n  /**\n   * @deprecated use `getWebSocketRpcClient` instead.\n   *\n   * ```diff\n   * -import { rpc } from 'viem/utils'\n   * +import { getWebSocketRpcClient } from 'viem/utils'\n   *\n   * -rpc.webSocket(url, params)\n   * +const webSocketClient = getWebSocketRpcClient(url)\n   * +webSocketClient.request(params)\n   * ```\n   */\n  webSocket,\n  /**\n   * @deprecated use `getWebSocketRpcClient` instead.\n   *\n   * ```diff\n   * -import { rpc } from 'viem/utils'\n   * +import { getWebSocketRpcClient } from 'viem/utils'\n   *\n   * -const response = await rpc.webSocketAsync(url, params)\n   * +const webSocketClient = getWebSocketRpcClient(url)\n   * +const response = await webSocketClient.requestAsync(params)\n   * ```\n   */\n  webSocketAsync,\n}\n/* c8 ignore end */\n"],"names":[],"mappings":"AAAA,4FAA4F;AAC5F,oCAAoC;;;;;AAUpC,OAAO,EAA8B,gBAAgB,EAAE,MAAM,WAAW,CAAA;AAExE,OAAO,EAAE,qBAAqB,EAAE,MAAM,gBAAgB,CAAA;;;AAQtD,SAAS,SAAS,CAChB,YAAwC,EACxC,EAAE,IAAI,EAAE,OAAO,EAAE,UAAU,EAAoB;IAE/C,YAAY,CAAC,OAAO,CAAC;QACnB,IAAI;QACJ,OAAO;QACP,UAAU;KACX,CAAC,CAAA;IACF,OAAO,YAAY,CAAA;AACrB,CAAC;AAYD,KAAK,UAAU,cAAc,CAC3B,YAAwC,EACxC,EAAE,IAAI,EAAE,OAAO,GAAG,MAAM,EAAyB;IAEjD,OAAO,YAAY,CAAC,YAAY,CAAC;QAC/B,IAAI;QACJ,OAAO;KACR,CAAC,CAAA;AACJ,CAAC;AAcM,KAAK,UAAU,SAAS,CAAC,GAAW;IACzC,MAAM,MAAM,GAAG,OAAM,qLAAA,AAAqB,EAAC,GAAG,CAAC,CAAA;IAC/C,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;QAClC,QAAQ,EAAE,MAAM,CAAC,QAAQ;QACzB,aAAa,EAAE,MAAM,CAAC,aAAa;KACpC,CAAC,CAAA;AACJ,CAAC;AAEM,MAAM,GAAG,GAAG;IACjB;;;;;;;;;;;OAWG,CACH,IAAI,EAAC,GAAW,EAAE,MAA6B;QAC7C,gKAAO,mBAAA,AAAgB,EAAC,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;IAC9C,CAAC;IACD;;;;;;;;;;;OAWG,CACH,SAAS;IACT;;;;;;;;;;;OAWG,CACH,cAAc;CACf,CAAA,CACD,iBAAA,EAAmB","ignoreList":[0]}},
    {"offset": {"line": 1183, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1189, "column": 0}, "map": {"version":3,"file":"mock.js","sources":["file:///Users/jaskaransingh/projects/LibraryManagerAI/client/node_modules/%40wagmi/core/src/connectors/mock.ts"],"sourcesContent":["import {\n  type Address,\n  type EIP1193RequestFn,\n  type Hex,\n  RpcRequestError,\n  SwitchChainError,\n  type Transport,\n  UserRejectedRequestError,\n  type WalletCallReceipt,\n  type WalletRpcSchema,\n  custom,\n  fromHex,\n  getAddress,\n  keccak256,\n  numberToHex,\n  stringToHex,\n} from 'viem'\nimport { rpc } from 'viem/utils'\n\nimport {\n  ChainNotConfiguredError,\n  ConnectorNotConnectedError,\n} from '../errors/config.js'\nimport { createConnector } from './createConnector.js'\n\nexport type MockParameters = {\n  accounts: readonly [Address, ...Address[]]\n  features?:\n    | {\n        defaultConnected?: boolean | undefined\n        connectError?: boolean | Error | undefined\n        switchChainError?: boolean | Error | undefined\n        signMessageError?: boolean | Error | undefined\n        signTypedDataError?: boolean | Error | undefined\n        reconnect?: boolean | undefined\n        watchAssetError?: boolean | Error | undefined\n      }\n    | undefined\n}\n\nmock.type = 'mock' as const\nexport function mock(parameters: MockParameters) {\n  const transactionCache = new Map<Hex, Hex[]>()\n  const features =\n    parameters.features ??\n    ({ defaultConnected: false } satisfies MockParameters['features'])\n\n  type Provider = ReturnType<\n    Transport<'custom', unknown, EIP1193RequestFn<WalletRpcSchema>>\n  >\n  type Properties = {\n    connect(parameters?: {\n      chainId?: number | undefined\n      isReconnecting?: boolean | undefined\n      foo?: string | undefined\n    }): Promise<{\n      accounts: readonly Address[]\n      chainId: number\n    }>\n  }\n  let connected = features.defaultConnected\n  let connectedChainId: number\n\n  return createConnector<Provider, Properties>((config) => ({\n    id: 'mock',\n    name: 'Mock Connector',\n    type: mock.type,\n    async setup() {\n      connectedChainId = config.chains[0].id\n    },\n    async connect({ chainId } = {}) {\n      if (features.connectError) {\n        if (typeof features.connectError === 'boolean')\n          throw new UserRejectedRequestError(new Error('Failed to connect.'))\n        throw features.connectError\n      }\n\n      const provider = await this.getProvider()\n      const accounts = await provider.request({\n        method: 'eth_requestAccounts',\n      })\n\n      let currentChainId = await this.getChainId()\n      if (chainId && currentChainId !== chainId) {\n        const chain = await this.switchChain!({ chainId })\n        currentChainId = chain.id\n      }\n\n      connected = true\n\n      return {\n        accounts: accounts.map((x) => getAddress(x)),\n        chainId: currentChainId,\n      }\n    },\n    async disconnect() {\n      connected = false\n    },\n    async getAccounts() {\n      if (!connected) throw new ConnectorNotConnectedError()\n      const provider = await this.getProvider()\n      const accounts = await provider.request({ method: 'eth_accounts' })\n      return accounts.map((x) => getAddress(x))\n    },\n    async getChainId() {\n      const provider = await this.getProvider()\n      const hexChainId = await provider.request({ method: 'eth_chainId' })\n      return fromHex(hexChainId, 'number')\n    },\n    async isAuthorized() {\n      if (!features.reconnect) return false\n      if (!connected) return false\n      const accounts = await this.getAccounts()\n      return !!accounts.length\n    },\n    async switchChain({ chainId }) {\n      const provider = await this.getProvider()\n      const chain = config.chains.find((x) => x.id === chainId)\n      if (!chain) throw new SwitchChainError(new ChainNotConfiguredError())\n\n      await provider.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: numberToHex(chainId) }],\n      })\n      return chain\n    },\n    onAccountsChanged(accounts) {\n      if (accounts.length === 0) this.onDisconnect()\n      else\n        config.emitter.emit('change', {\n          accounts: accounts.map((x) => getAddress(x)),\n        })\n    },\n    onChainChanged(chain) {\n      const chainId = Number(chain)\n      config.emitter.emit('change', { chainId })\n    },\n    async onDisconnect(_error) {\n      config.emitter.emit('disconnect')\n      connected = false\n    },\n    async getProvider({ chainId } = {}) {\n      const chain =\n        config.chains.find((x) => x.id === chainId) ?? config.chains[0]\n      const url = chain.rpcUrls.default.http[0]!\n\n      const request: EIP1193RequestFn = async ({ method, params }) => {\n        // eth methods\n        if (method === 'eth_chainId') return numberToHex(connectedChainId)\n        if (method === 'eth_requestAccounts') return parameters.accounts\n        if (method === 'eth_signTypedData_v4')\n          if (features.signTypedDataError) {\n            if (typeof features.signTypedDataError === 'boolean')\n              throw new UserRejectedRequestError(\n                new Error('Failed to sign typed data.'),\n              )\n            throw features.signTypedDataError\n          }\n\n        // wallet methods\n        if (method === 'wallet_switchEthereumChain') {\n          if (features.switchChainError) {\n            if (typeof features.switchChainError === 'boolean')\n              throw new UserRejectedRequestError(\n                new Error('Failed to switch chain.'),\n              )\n            throw features.switchChainError\n          }\n          type Params = [{ chainId: Hex }]\n          connectedChainId = fromHex((params as Params)[0].chainId, 'number')\n          this.onChainChanged(connectedChainId.toString())\n          return\n        }\n\n        if (method === 'wallet_watchAsset') {\n          if (features.watchAssetError) {\n            if (typeof features.watchAssetError === 'boolean')\n              throw new UserRejectedRequestError(\n                new Error('Failed to switch chain.'),\n              )\n            throw features.watchAssetError\n          }\n          return connected\n        }\n\n        if (method === 'wallet_getCapabilities')\n          return {\n            '0x2105': {\n              paymasterService: {\n                supported:\n                  (params as [Hex])[0] ===\n                  '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\n              },\n              sessionKeys: {\n                supported: true,\n              },\n            },\n            '0x14A34': {\n              paymasterService: {\n                supported:\n                  (params as [Hex])[0] ===\n                  '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\n              },\n            },\n          }\n\n        if (method === 'wallet_sendCalls') {\n          const hashes = []\n          const calls = (params as any)[0].calls\n          for (const call of calls) {\n            const { result, error } = await rpc.http(url, {\n              body: {\n                method: 'eth_sendTransaction',\n                params: [call],\n              },\n            })\n            if (error)\n              throw new RpcRequestError({\n                body: { method, params },\n                error,\n                url,\n              })\n            hashes.push(result)\n          }\n          const id = keccak256(stringToHex(JSON.stringify(calls)))\n          transactionCache.set(id, hashes)\n          return id\n        }\n\n        if (method === 'wallet_getCallsStatus') {\n          const hashes = transactionCache.get((params as any)[0])\n          if (!hashes) return null\n          const receipts = await Promise.all(\n            hashes.map(async (hash) => {\n              const { result, error } = await rpc.http(url, {\n                body: {\n                  method: 'eth_getTransactionReceipt',\n                  params: [hash],\n                  id: 0,\n                },\n              })\n              if (error)\n                throw new RpcRequestError({\n                  body: { method, params },\n                  error,\n                  url,\n                })\n              if (!result) return null\n              return {\n                blockHash: result.blockHash,\n                blockNumber: result.blockNumber,\n                gasUsed: result.gasUsed,\n                logs: result.logs,\n                status: result.status,\n                transactionHash: result.transactionHash,\n              } satisfies WalletCallReceipt\n            }),\n          )\n          if (receipts.some((x) => !x))\n            return { status: 'PENDING', receipts: [] }\n          return { status: 'CONFIRMED', receipts }\n        }\n\n        if (method === 'wallet_showCallsStatus') return\n\n        // other methods\n        if (method === 'personal_sign') {\n          if (features.signMessageError) {\n            if (typeof features.signMessageError === 'boolean')\n              throw new UserRejectedRequestError(\n                new Error('Failed to sign message.'),\n              )\n            throw features.signMessageError\n          }\n          // Change `personal_sign` to `eth_sign` and swap params\n          method = 'eth_sign'\n          type Params = [data: Hex, address: Address]\n          params = [(params as Params)[1], (params as Params)[0]]\n        }\n\n        const body = { method, params }\n        const { error, result } = await rpc.http(url, { body })\n        if (error) throw new RpcRequestError({ body, error, url })\n\n        return result\n      }\n      return custom({ request })({ retryCount: 0 })\n    },\n  }))\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1444, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1450, "column": 0}, "map": {"version":3,"file":"safe.js","sources":["file:///Users/jaskaransingh/projects/LibraryManagerAI/client/node_modules/%40wagmi/connectors/src/safe.ts"],"sourcesContent":["import type { SafeAppProvider } from '@safe-global/safe-apps-provider'\nimport type { Opts } from '@safe-global/safe-apps-sdk'\nimport {\n  type Connector,\n  ProviderNotFoundError,\n  createConnector,\n} from '@wagmi/core'\nimport type { Compute } from '@wagmi/core/internal'\nimport { getAddress, withTimeout } from 'viem'\n\nexport type SafeParameters = Compute<\n  Opts & {\n    /**\n     * Connector automatically connects when used as Safe App.\n     *\n     * This flag simulates the disconnect behavior by keeping track of connection status in storage\n     * and only autoconnecting when previously connected by user action (e.g. explicitly choosing to connect).\n     *\n     * @default false\n     */\n    shimDisconnect?: boolean | undefined\n    /**\n     * Timeout in milliseconds for `getInfo` (from the Safe SDK) to resolve.\n     *\n     * `getInfo` does not resolve when not used in Safe App iFrame. This allows the connector to force a timeout.\n     * @default 10\n     */\n    unstable_getInfoTimeout?: number | undefined\n  }\n>\n\nsafe.type = 'safe' as const\nexport function safe(parameters: SafeParameters = {}) {\n  const { shimDisconnect = false } = parameters\n\n  type Provider = SafeAppProvider | undefined\n  type Properties = Record<string, unknown>\n  type StorageItem = { 'safe.disconnected': true }\n\n  let provider_: Provider | undefined\n\n  let disconnect: Connector['onDisconnect'] | undefined\n\n  return createConnector<Provider, Properties, StorageItem>((config) => ({\n    id: 'safe',\n    name: 'Safe',\n    type: safe.type,\n    async connect() {\n      const provider = await this.getProvider()\n      if (!provider) throw new ProviderNotFoundError()\n\n      const accounts = await this.getAccounts()\n      const chainId = await this.getChainId()\n\n      if (!disconnect) {\n        disconnect = this.onDisconnect.bind(this)\n        provider.on('disconnect', disconnect)\n      }\n\n      // Remove disconnected shim if it exists\n      if (shimDisconnect) await config.storage?.removeItem('safe.disconnected')\n\n      return { accounts, chainId }\n    },\n    async disconnect() {\n      const provider = await this.getProvider()\n      if (!provider) throw new ProviderNotFoundError()\n\n      if (disconnect) {\n        provider.removeListener('disconnect', disconnect)\n        disconnect = undefined\n      }\n\n      // Add shim signalling connector is disconnected\n      if (shimDisconnect)\n        await config.storage?.setItem('safe.disconnected', true)\n    },\n    async getAccounts() {\n      const provider = await this.getProvider()\n      if (!provider) throw new ProviderNotFoundError()\n      return (await provider.request({ method: 'eth_accounts' })).map(\n        getAddress,\n      )\n    },\n    async getProvider() {\n      // Only allowed in iframe context\n      const isIframe =\n        typeof window !== 'undefined' && window?.parent !== window\n      if (!isIframe) return\n\n      if (!provider_) {\n        const { default: SDK } = await import('@safe-global/safe-apps-sdk')\n        const sdk = new SDK(parameters)\n\n        // `getInfo` hangs when not used in Safe App iFrame\n        // https://github.com/safe-global/safe-apps-sdk/issues/263#issuecomment-1029835840\n        const safe = await withTimeout(() => sdk.safe.getInfo(), {\n          timeout: parameters.unstable_getInfoTimeout ?? 10,\n        })\n        if (!safe) throw new Error('Could not load Safe information')\n        // Unwrapping import for Vite compatibility.\n        // See: https://github.com/vitejs/vite/issues/9703\n        const SafeAppProvider = await (async () => {\n          const Provider = await import('@safe-global/safe-apps-provider')\n          if (\n            typeof Provider.SafeAppProvider !== 'function' &&\n            typeof Provider.default.SafeAppProvider === 'function'\n          )\n            return Provider.default.SafeAppProvider\n          return Provider.SafeAppProvider\n        })()\n        provider_ = new SafeAppProvider(safe, sdk)\n      }\n      return provider_\n    },\n    async getChainId() {\n      const provider = await this.getProvider()\n      if (!provider) throw new ProviderNotFoundError()\n      return Number(provider.chainId)\n    },\n    async isAuthorized() {\n      try {\n        const isDisconnected =\n          shimDisconnect &&\n          // If shim exists in storage, connector is disconnected\n          (await config.storage?.getItem('safe.disconnected'))\n        if (isDisconnected) return false\n\n        const accounts = await this.getAccounts()\n        return !!accounts.length\n      } catch {\n        return false\n      }\n    },\n    onAccountsChanged() {\n      // Not relevant for Safe because changing account requires app reload.\n    },\n    onChainChanged() {\n      // Not relevant for Safe because Safe smart contract wallets only exist on single chain.\n    },\n    onDisconnect() {\n      config.emitter.emit('disconnect')\n    },\n  }))\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1551, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1557, "column": 0}, "map": {"version":3,"file":"version.js","sources":["file:///Users/jaskaransingh/projects/LibraryManagerAI/client/node_modules/%40wagmi/connectors/src/version.ts"],"sourcesContent":["export const version = '5.7.8'\n"],"names":[],"mappings":";;;AAAO,MAAM,OAAO,GAAG,OAAO,CAAA","ignoreList":[0]}},
    {"offset": {"line": 1561, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1567, "column": 0}, "map": {"version":3,"file":"walletConnect.js","sources":["file:///Users/jaskaransingh/projects/LibraryManagerAI/client/node_modules/%40wagmi/connectors/src/walletConnect.ts"],"sourcesContent":["import {\n  ChainNotConfiguredError,\n  type Connector,\n  ProviderNotFoundError,\n  createConnector,\n  extractRpcUrls,\n} from '@wagmi/core'\nimport type { Compute, ExactPartial, Omit } from '@wagmi/core/internal'\nimport type { EthereumProvider } from '@walletconnect/ethereum-provider'\nimport {\n  type AddEthereumChainParameter,\n  type Address,\n  type ProviderConnectInfo,\n  type ProviderRpcError,\n  type RpcError,\n  SwitchChainError,\n  UserRejectedRequestError,\n  getAddress,\n  numberToHex,\n} from 'viem'\n\ntype WalletConnectConnector = Connector & {\n  onDisplayUri(uri: string): void\n  onSessionDelete(data: { topic: string }): void\n}\n\ntype EthereumProviderOptions = Parameters<(typeof EthereumProvider)['init']>[0]\n\nexport type WalletConnectParameters = Compute<\n  {\n    /**\n     * If a new chain is added to a previously existing configured connector `chains`, this flag\n     * will determine if that chain should be considered as stale. A stale chain is a chain that\n     * WalletConnect has yet to establish a relationship with (e.g. the user has not approved or\n     * rejected the chain).\n     *\n     * This flag mainly affects the behavior when a wallet does not support dynamic chain authorization\n     * with WalletConnect v2.\n     *\n     * If `true` (default), the new chain will be treated as a stale chain. If the user\n     * has yet to establish a relationship (approved/rejected) with this chain in their WalletConnect\n     * session, the connector will disconnect upon the dapp auto-connecting, and the user will have to\n     * reconnect to the dapp (revalidate the chain) in order to approve the newly added chain.\n     * This is the default behavior to avoid an unexpected error upon switching chains which may\n     * be a confusing user experience (e.g. the user will not know they have to reconnect\n     * unless the dapp handles these types of errors).\n     *\n     * If `false`, the new chain will be treated as a potentially valid chain. This means that if the user\n     * has yet to establish a relationship with the chain in their WalletConnect session, wagmi will successfully\n     * auto-connect the user. This comes with the trade-off that the connector will throw an error\n     * when attempting to switch to the unapproved chain if the wallet does not support dynamic session updates.\n     * This may be useful in cases where a dapp constantly\n     * modifies their configured chains, and they do not want to disconnect the user upon\n     * auto-connecting. If the user decides to switch to the unapproved chain, it is important that the\n     * dapp handles this error and prompts the user to reconnect to the dapp in order to approve\n     * the newly added chain.\n     *\n     * @default true\n     */\n    isNewChainsStale?: boolean\n  } & Omit<\n    EthereumProviderOptions,\n    | 'chains'\n    | 'events'\n    | 'optionalChains'\n    | 'optionalEvents'\n    | 'optionalMethods'\n    | 'methods'\n    | 'rpcMap'\n    | 'showQrModal'\n  > &\n    ExactPartial<Pick<EthereumProviderOptions, 'showQrModal'>>\n>\n\nwalletConnect.type = 'walletConnect' as const\nexport function walletConnect(parameters: WalletConnectParameters) {\n  const isNewChainsStale = parameters.isNewChainsStale ?? true\n\n  type Provider = Awaited<ReturnType<(typeof EthereumProvider)['init']>>\n  type Properties = {\n    connect(parameters?: {\n      chainId?: number | undefined\n      isReconnecting?: boolean | undefined\n      pairingTopic?: string | undefined\n    }): Promise<{\n      accounts: readonly Address[]\n      chainId: number\n    }>\n    getNamespaceChainsIds(): number[]\n    getRequestedChainsIds(): Promise<number[]>\n    isChainsStale(): Promise<boolean>\n    onConnect(connectInfo: ProviderConnectInfo): void\n    onDisplayUri(uri: string): void\n    onSessionDelete(data: { topic: string }): void\n    setRequestedChainsIds(chains: number[]): void\n    requestedChainsStorageKey: `${string}.requestedChains`\n  }\n  type StorageItem = {\n    [_ in Properties['requestedChainsStorageKey']]: number[]\n  }\n\n  let provider_: Provider | undefined\n  let providerPromise: Promise<typeof provider_>\n  const NAMESPACE = 'eip155'\n\n  let accountsChanged: WalletConnectConnector['onAccountsChanged'] | undefined\n  let chainChanged: WalletConnectConnector['onChainChanged'] | undefined\n  let connect: WalletConnectConnector['onConnect'] | undefined\n  let displayUri: WalletConnectConnector['onDisplayUri'] | undefined\n  let sessionDelete: WalletConnectConnector['onSessionDelete'] | undefined\n  let disconnect: WalletConnectConnector['onDisconnect'] | undefined\n\n  return createConnector<Provider, Properties, StorageItem>((config) => ({\n    id: 'walletConnect',\n    name: 'WalletConnect',\n    type: walletConnect.type,\n    async setup() {\n      const provider = await this.getProvider().catch(() => null)\n      if (!provider) return\n      if (!connect) {\n        connect = this.onConnect.bind(this)\n        provider.on('connect', connect)\n      }\n      if (!sessionDelete) {\n        sessionDelete = this.onSessionDelete.bind(this)\n        provider.on('session_delete', sessionDelete)\n      }\n    },\n    async connect({ chainId, ...rest } = {}) {\n      try {\n        const provider = await this.getProvider()\n        if (!provider) throw new ProviderNotFoundError()\n        if (!displayUri) {\n          displayUri = this.onDisplayUri\n          provider.on('display_uri', displayUri)\n        }\n\n        let targetChainId = chainId\n        if (!targetChainId) {\n          const state = (await config.storage?.getItem('state')) ?? {}\n          const isChainSupported = config.chains.some(\n            (x) => x.id === state.chainId,\n          )\n          if (isChainSupported) targetChainId = state.chainId\n          else targetChainId = config.chains[0]?.id\n        }\n        if (!targetChainId) throw new Error('No chains found on connector.')\n\n        const isChainsStale = await this.isChainsStale()\n        // If there is an active session with stale chains, disconnect current session.\n        if (provider.session && isChainsStale) await provider.disconnect()\n\n        // If there isn't an active session or chains are stale, connect.\n        if (!provider.session || isChainsStale) {\n          const optionalChains = config.chains\n            .filter((chain) => chain.id !== targetChainId)\n            .map((optionalChain) => optionalChain.id)\n          await provider.connect({\n            optionalChains: [targetChainId, ...optionalChains],\n            ...('pairingTopic' in rest\n              ? { pairingTopic: rest.pairingTopic }\n              : {}),\n          })\n\n          this.setRequestedChainsIds(config.chains.map((x) => x.id))\n        }\n\n        // If session exists and chains are authorized, enable provider for required chain\n        const accounts = (await provider.enable()).map((x) => getAddress(x))\n        const currentChainId = await this.getChainId()\n\n        if (displayUri) {\n          provider.removeListener('display_uri', displayUri)\n          displayUri = undefined\n        }\n        if (connect) {\n          provider.removeListener('connect', connect)\n          connect = undefined\n        }\n        if (!accountsChanged) {\n          accountsChanged = this.onAccountsChanged.bind(this)\n          provider.on('accountsChanged', accountsChanged)\n        }\n        if (!chainChanged) {\n          chainChanged = this.onChainChanged.bind(this)\n          provider.on('chainChanged', chainChanged)\n        }\n        if (!disconnect) {\n          disconnect = this.onDisconnect.bind(this)\n          provider.on('disconnect', disconnect)\n        }\n        if (!sessionDelete) {\n          sessionDelete = this.onSessionDelete.bind(this)\n          provider.on('session_delete', sessionDelete)\n        }\n\n        return { accounts, chainId: currentChainId }\n      } catch (error) {\n        if (\n          /(user rejected|connection request reset)/i.test(\n            (error as ProviderRpcError)?.message,\n          )\n        ) {\n          throw new UserRejectedRequestError(error as Error)\n        }\n        throw error\n      }\n    },\n    async disconnect() {\n      const provider = await this.getProvider()\n      try {\n        await provider?.disconnect()\n      } catch (error) {\n        if (!/No matching key/i.test((error as Error).message)) throw error\n      } finally {\n        if (chainChanged) {\n          provider?.removeListener('chainChanged', chainChanged)\n          chainChanged = undefined\n        }\n        if (disconnect) {\n          provider?.removeListener('disconnect', disconnect)\n          disconnect = undefined\n        }\n        if (!connect) {\n          connect = this.onConnect.bind(this)\n          provider?.on('connect', connect)\n        }\n        if (accountsChanged) {\n          provider?.removeListener('accountsChanged', accountsChanged)\n          accountsChanged = undefined\n        }\n        if (sessionDelete) {\n          provider?.removeListener('session_delete', sessionDelete)\n          sessionDelete = undefined\n        }\n\n        this.setRequestedChainsIds([])\n      }\n    },\n    async getAccounts() {\n      const provider = await this.getProvider()\n      return provider.accounts.map((x) => getAddress(x))\n    },\n    async getProvider({ chainId } = {}) {\n      async function initProvider() {\n        const optionalChains = config.chains.map((x) => x.id) as [number]\n        if (!optionalChains.length) return\n        const { EthereumProvider } = await import(\n          '@walletconnect/ethereum-provider'\n        )\n        return await EthereumProvider.init({\n          ...parameters,\n          disableProviderPing: true,\n          optionalChains,\n          projectId: parameters.projectId,\n          rpcMap: Object.fromEntries(\n            config.chains.map((chain) => {\n              const [url] = extractRpcUrls({\n                chain,\n                transports: config.transports,\n              })\n              return [chain.id, url]\n            }),\n          ),\n          showQrModal: parameters.showQrModal ?? true,\n        })\n      }\n\n      if (!provider_) {\n        if (!providerPromise) providerPromise = initProvider()\n        provider_ = await providerPromise\n        provider_?.events.setMaxListeners(Number.POSITIVE_INFINITY)\n      }\n      if (chainId) await this.switchChain?.({ chainId })\n      return provider_!\n    },\n    async getChainId() {\n      const provider = await this.getProvider()\n      return provider.chainId\n    },\n    async isAuthorized() {\n      try {\n        const [accounts, provider] = await Promise.all([\n          this.getAccounts(),\n          this.getProvider(),\n        ])\n\n        // If an account does not exist on the session, then the connector is unauthorized.\n        if (!accounts.length) return false\n\n        // If the chains are stale on the session, then the connector is unauthorized.\n        const isChainsStale = await this.isChainsStale()\n        if (isChainsStale && provider.session) {\n          await provider.disconnect().catch(() => {})\n          return false\n        }\n        return true\n      } catch {\n        return false\n      }\n    },\n    async switchChain({ addEthereumChainParameter, chainId }) {\n      const provider = await this.getProvider()\n      if (!provider) throw new ProviderNotFoundError()\n\n      const chain = config.chains.find((x) => x.id === chainId)\n      if (!chain) throw new SwitchChainError(new ChainNotConfiguredError())\n\n      try {\n        await Promise.all([\n          new Promise<void>((resolve) => {\n            const listener = ({\n              chainId: currentChainId,\n            }: { chainId?: number | undefined }) => {\n              if (currentChainId === chainId) {\n                config.emitter.off('change', listener)\n                resolve()\n              }\n            }\n            config.emitter.on('change', listener)\n          }),\n          provider.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{ chainId: numberToHex(chainId) }],\n          }),\n        ])\n\n        const requestedChains = await this.getRequestedChainsIds()\n        this.setRequestedChainsIds([...requestedChains, chainId])\n\n        return chain\n      } catch (err) {\n        const error = err as RpcError\n\n        if (/(user rejected)/i.test(error.message))\n          throw new UserRejectedRequestError(error)\n\n        // Indicates chain is not added to provider\n        try {\n          let blockExplorerUrls: string[] | undefined\n          if (addEthereumChainParameter?.blockExplorerUrls)\n            blockExplorerUrls = addEthereumChainParameter.blockExplorerUrls\n          else\n            blockExplorerUrls = chain.blockExplorers?.default.url\n              ? [chain.blockExplorers?.default.url]\n              : []\n\n          let rpcUrls: readonly string[]\n          if (addEthereumChainParameter?.rpcUrls?.length)\n            rpcUrls = addEthereumChainParameter.rpcUrls\n          else rpcUrls = [...chain.rpcUrls.default.http]\n\n          const addEthereumChain = {\n            blockExplorerUrls,\n            chainId: numberToHex(chainId),\n            chainName: addEthereumChainParameter?.chainName ?? chain.name,\n            iconUrls: addEthereumChainParameter?.iconUrls,\n            nativeCurrency:\n              addEthereumChainParameter?.nativeCurrency ?? chain.nativeCurrency,\n            rpcUrls,\n          } satisfies AddEthereumChainParameter\n\n          await provider.request({\n            method: 'wallet_addEthereumChain',\n            params: [addEthereumChain],\n          })\n\n          const requestedChains = await this.getRequestedChainsIds()\n          this.setRequestedChainsIds([...requestedChains, chainId])\n          return chain\n        } catch (error) {\n          throw new UserRejectedRequestError(error as Error)\n        }\n      }\n    },\n    onAccountsChanged(accounts) {\n      if (accounts.length === 0) this.onDisconnect()\n      else\n        config.emitter.emit('change', {\n          accounts: accounts.map((x) => getAddress(x)),\n        })\n    },\n    onChainChanged(chain) {\n      const chainId = Number(chain)\n      config.emitter.emit('change', { chainId })\n    },\n    async onConnect(connectInfo) {\n      const chainId = Number(connectInfo.chainId)\n      const accounts = await this.getAccounts()\n      config.emitter.emit('connect', { accounts, chainId })\n    },\n    async onDisconnect(_error) {\n      this.setRequestedChainsIds([])\n      config.emitter.emit('disconnect')\n\n      const provider = await this.getProvider()\n      if (accountsChanged) {\n        provider.removeListener('accountsChanged', accountsChanged)\n        accountsChanged = undefined\n      }\n      if (chainChanged) {\n        provider.removeListener('chainChanged', chainChanged)\n        chainChanged = undefined\n      }\n      if (disconnect) {\n        provider.removeListener('disconnect', disconnect)\n        disconnect = undefined\n      }\n      if (sessionDelete) {\n        provider.removeListener('session_delete', sessionDelete)\n        sessionDelete = undefined\n      }\n      if (!connect) {\n        connect = this.onConnect.bind(this)\n        provider.on('connect', connect)\n      }\n    },\n    onDisplayUri(uri) {\n      config.emitter.emit('message', { type: 'display_uri', data: uri })\n    },\n    onSessionDelete() {\n      this.onDisconnect()\n    },\n    getNamespaceChainsIds() {\n      if (!provider_) return []\n      const chainIds = provider_.session?.namespaces[NAMESPACE]?.accounts?.map(\n        (account) => Number.parseInt(account.split(':')[1] || ''),\n      )\n      return chainIds ?? []\n    },\n    async getRequestedChainsIds() {\n      return (\n        (await config.storage?.getItem(this.requestedChainsStorageKey)) ?? []\n      )\n    },\n    /**\n     * Checks if the target chains match the chains that were\n     * initially requested by the connector for the WalletConnect session.\n     * If there is a mismatch, this means that the chains on the connector\n     * are considered stale, and need to be revalidated at a later point (via\n     * connection).\n     *\n     * There may be a scenario where a dapp adds a chain to the\n     * connector later on, however, this chain will not have been approved or rejected\n     * by the wallet. In this case, the chain is considered stale.\n     */\n    async isChainsStale() {\n      if (!isNewChainsStale) return false\n\n      const connectorChains = config.chains.map((x) => x.id)\n      const namespaceChains = this.getNamespaceChainsIds()\n      if (\n        namespaceChains.length &&\n        !namespaceChains.some((id) => connectorChains.includes(id))\n      )\n        return false\n\n      const requestedChains = await this.getRequestedChainsIds()\n      return !connectorChains.every((id) => requestedChains.includes(id))\n    },\n    async setRequestedChainsIds(chains) {\n      await config.storage?.setItem(this.requestedChainsStorageKey, chains)\n    },\n    get requestedChainsStorageKey() {\n      return `${this.id}.requestedChains` as Properties['requestedChainsStorageKey']\n    },\n  }))\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1927, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}